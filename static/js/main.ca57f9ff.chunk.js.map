{"version":3,"sources":["Components/Logo/index.jsx","assets/js/Routes.js","utils/getData.js","Components/DataCard/index.jsx","Hours/Morning/index.jsx","Hours/Noon/index.jsx","Hours/Night/index.jsx","Hours/AfterNoon/index.jsx","Components/Colombia/index.jsx","Containers/Home/index.jsx","Components/Credits/index.jsx","Components/India/index.jsx","Components/Kirguistan/index.jsx","App.js","index.js"],"names":["Logo","to","className","getData","a","country","API","fetch","response","json","data","Math","getAQI","aqi","round","dataCountry","console","error","index","length","element","parseInt","imagesHour","DataCard","props","React","useState","AQIvalue","setAQIValue","flagCountry","setFlagCountry","showCountry","setShowCountry","qualityAirData","title","description","background","color","useEffect","log","dayTime","hour","date","getHours","min","getMinutes","style","backgroundImage","backgroundColor","src","process","alt","Morning","Noon","Night","AfterNoon","Colombia","setData","setHour","setResponse","Date","tempHour","tempMin","setHours","setMinutes","awaitData","callbackData","Home","quality","Credits","href","target","rel","India","Kirguistan","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ca57f9ff.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport * as Routes from '../../assets/js/Routes';\r\n\r\nimport './index.scss'\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <Link to={Routes.HOME} className=\"Logo\">\r\n            <h1> Respira</h1>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default Logo;","export const HOME = '/'\r\nexport const COLOMBIA = '/colombia'\r\nexport const SALUDABLE = '/saludable'\r\nexport const ENFERMO = '/enfermo'\r\nexport const HUELLA = '/huella'\r\nexport const ERROR404 = '*'\r\n","import { AirQualitToken } from '../assets/js/AQToken';\r\n\r\nconst getData = async ( country = null ) => {\r\n    let API = \"https://api.waqi.info/search/?token=\" + AirQualitToken + \"&keyword=\" + country ;\r\n\r\n    try {\r\n        if( country != null ){\r\n            const response = await fetch( API );\r\n            const data = await response.json();\r\n\r\n            let aqi = Math.round( await getAQI( data.data ) );            \r\n\r\n            let dataCountry = {\r\n                aqi,\r\n            }\r\n            return dataCountry;\r\n        }\r\n    } catch ( error ) {\r\n        console.error( 'Fetch Error: ', error )\r\n    }\r\n}\r\n\r\nconst getAQI = async( data ) => {\r\n\r\n    let aqi = 0;\r\n\r\n    for(let index = 0; index < data.length; index++ ){\r\n        var element = data[index];\r\n        aqi = aqi + parseInt(element.aqi) / data.length;\r\n    }\r\n\r\n    return aqi\r\n}\r\n\r\n\r\n\r\nexport default getData;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './index.scss';\r\n\r\nimport * as Routes from '../../assets/js/Routes'\r\n\r\nconst imagesHour = ['/img/hours/morning.svg', '/img/hours/noon.svg', '/img/hours/afternoon.svg', '/img/hours/night.svg'];\r\n\r\n\r\nconst DataCard = ( props ) => {\r\n\r\n    const [ AQIvalue, setAQIValue ] = React.useState( {} )\r\n    const [ flagCountry, setFlagCountry ] = React.useState('');\r\n    const [ showCountry, setShowCountry ] = React.useState([true, false, false]);\r\n\r\n    const qualityAirData = [\r\n        {\r\n            title: \"Bueno\",\r\n            description: \"El aire es bueno, todo perfecto.\",\r\n            background: \"#00F600\",\r\n            color: \"var(--white)\"\r\n        },{\r\n            title: \"Moderado\",\r\n            description: \"No es un problema todavia, pero empieza a tener cuidado.\",\r\n            background: \"#F8FF00\",\r\n            color: \"var(--black)\"\r\n        },{\r\n            title: \"No es saludable para grupos sensibles\",\r\n            description: \"Aquí las personas con problemas respiratorios, niños y ancianos no deberían exponerse por tiempo prolongado al aire.\",\r\n            background: \"#FF6E00\",\r\n            color: \"var(--white)\"\r\n        },{\r\n            title: \"Insalubre\",\r\n            description: \"Toda la población PUEDE empezar a tener problemas, pero no es común que todos los presenten.\",\r\n            background: \"#B6079A\",\r\n            color: \"var(--white)\"\r\n        },{\r\n            title: \"Muy poco saludable\",\r\n            description: \"Estado de emergencia. Posibilidad de que todas las personas tengan problemas serios respiratorios.\",\r\n            background: \"#A30003\",\r\n            color: \"var(--white)\"\r\n        },{\r\n            title: \"Peligroso\",\r\n            description: \"NO SALGAN DE SU CASA. Todos pueden presentar graves problemas respiratorios\",\r\n            background: \"#7C0002\",\r\n            color: \"var(--white)\"\r\n        }\r\n    ]\r\n\r\n    React.useEffect( () => {\r\n\r\n    const onChangeFlag = ( country ) => {\r\n        if ( country === 'colombia') {\r\n            setFlagCountry('/img/flags/co.svg')\r\n            setShowCountry([true, false, false])\r\n\r\n        } else if ( country === 'kyrgyzstan' ) {\r\n            setFlagCountry('/img/flags/kg.svg')\r\n            setShowCountry([false, true, false])\r\n\r\n        } else if ( country === 'india' ) {\r\n            setFlagCountry('/img/flags/in.svg')\r\n            setShowCountry([false, false, true])\r\n        }\r\n    }\r\n\r\n    const onChangeAQI = ( aqi ) => {\r\n\r\n        if( aqi > 0 && aqi <= 50 ) {\r\n            setAQIValue( qualityAirData[0] )\r\n\r\n        } else if( aqi > 50 && aqi <= 100 ) {\r\n            setAQIValue ( qualityAirData[1] )\r\n\r\n        } else if ( aqi > 100 && aqi <= 150 ) {\r\n            setAQIValue ( qualityAirData[2] )\r\n\r\n        } else if( aqi > 150 && aqi <= 200 ) {\r\n            setAQIValue ( qualityAirData[3] )\r\n\r\n        } else if ( aqi > 200 && aqi <= 200 ) {\r\n            setAQIValue ( qualityAirData[4] ) \r\n\r\n        } else if ( aqi > 200 ) {\r\n            setAQIValue ( qualityAirData[5] )\r\n        }    \r\n    }\r\n\r\n    onChangeFlag(props.data.country)\r\n    onChangeAQI(props.data.aqi)\r\n    console.log(props.data.country, flagCountry, showCountry)\r\n\r\n    },[props])\r\n    \r\n    let hour = props.data.date.getHours();\r\n    let min = props.data.date.getMinutes()\r\n\r\n    let dayTime;\r\n\r\n    if( hour >= 6 && hour <= 12 ) {\r\n        dayTime = imagesHour[0]\r\n    } else if ( hour > 12 && hour <= 15 ) {\r\n        dayTime = imagesHour[1]\r\n    } else if ( hour > 15 && hour <= 19 ) {\r\n        dayTime = imagesHour[2]\r\n    } else {\r\n        dayTime = imagesHour[3]\r\n    }\r\n\r\n    return(\r\n        <section className=\"Datacard\">\r\n            <article className=\"Datacard__body\">\r\n                <div className=\"Datacard__body__flag\" style={{ backgroundImage: \"url(\" + process.env.PUBLIC_URL + flagCountry + \")\" }}></div>\r\n                \r\n                <div className=\"Datacard__body__state\">\r\n\r\n                    <div className=\"Datacard__body__state__header\" style={{ backgroundColor: AQIvalue.background }}>\r\n                        <h1 className=\"Datacard__body__state__header__value\" style={{ color: AQIvalue.color }} >{ AQIvalue.title }: {props.data.aqi} <strong>aqi</strong></h1>\r\n                    </div>\r\n\r\n                    <div className=\"Datacard__body__state__body\">\r\n                        <p>{AQIvalue.description}</p>\r\n                    </div>\r\n                \r\n                </div>\r\n\r\n                <div className=\"Datacard__body__hour\">\r\n                    <div className=\"Datacard__body__hour__img\">\r\n                        <img src={ process.env.PUBLIC_URL + dayTime } alt=\"Imange de hora\"/>\r\n                    </div>\r\n                        <p className=\"Datacard__body__hour__text\"><strong>Hora</strong><br /> {hour < 10 ? \"0\" + hour : hour}:{min < 10 ? \"0\" + min : min}</p>\r\n                </div>\r\n\r\n            </article>\r\n            {\r\n                !showCountry[0] &&\r\n                <Link to = { Routes.COLOMBIA } className=\"Datacard__btn neutro\"> Colombia </Link>\r\n            }{\r\n                !showCountry[1] && \r\n                <Link to = { Routes.SALUDABLE } className=\"Datacard__btn positive\"> País menos contaminado del mundo </Link>\r\n\r\n            }{\r\n                !showCountry[2] &&\r\n                <Link to={ Routes.ENFERMO } className=\"Datacard__btn negative\"> País más contaminado del mundo </Link>\r\n            }\r\n        </section>\r\n    )\r\n\r\n}\r\n\r\nexport default DataCard;","import React from 'react'\r\nimport './index.scss'\r\n\r\nimport DataCard from '../../Components/DataCard';\r\nconst fondo = process.env.PUBLIC_URL + '/img/mañana.svg';\r\n\r\n\r\nconst Morning = ( props ) => {\r\n    return(\r\n        <section className=\"Morning\">\r\n            <img src={fondo} alt=\"\"/>\r\n            <DataCard data = { props.data } />\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Morning;","import React from 'react'\r\nimport './index.scss'\r\nimport DataCard from '../../Components/DataCard';\r\n\r\nconst fondo = process.env.PUBLIC_URL + '/img/noon.svg';\r\n\r\nconst Noon = ( props ) => {\r\n    return(\r\n        <section className=\"Noon\">\r\n            <img src={fondo} alt=\"\"/>\r\n            <DataCard data = { props.data } />\r\n            \r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Noon;","import React from 'react'\r\nimport DataCard from '../../Components/DataCard';\r\n\r\nimport './index.scss'\r\n\r\nconst fondo = process.env.PUBLIC_URL + '/img/noche.svg';\r\n\r\nconst Night = ( props ) => {\r\n    return(\r\n        <section className=\"Night\">\r\n            <img src={ fondo } alt=\"fondo\"/>\r\n            <DataCard data = { props.data } />\r\n            \r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Night;","import React from 'react'\r\nimport './index.scss'\r\n\r\nimport DataCard from '../../Components/DataCard';\r\n\r\nconst fondo = process.env.PUBLIC_URL + '/img/afternoon.svg';\r\n\r\nconst AfterNoon = ( props ) => {\r\n    return(\r\n        <section className=\"AfterNoon\">\r\n            <img src={fondo} alt=\"\"/>\r\n            <DataCard data = { props.data } />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default AfterNoon;","import React from 'react'\r\nimport './index.scss';\r\n\r\nimport getData from '../../utils/getData';\r\n\r\nimport Morning from '../../Hours/Morning';\r\nimport Noon from '../../Hours/Noon';\r\nimport Night from '../../Hours/Night';\r\nimport AfterNoon from '../../Hours/AfterNoon';\r\n\r\nconst Colombia = ( props ) => {\r\n    \r\n    const [ data, setData ] = React.useState({})\r\n    const [ hour, setHour ] = React.useState(0)\r\n    const [ response, setResponse ] = React.useState(false)\r\n\r\n    let date = null;\r\n\r\n    React.useEffect( () => {\r\n\r\n        const callbackData = async () => {\r\n            if( response === false ) {\r\n                date = new Date()\r\n                let utc = 0;\r\n                let min = 0;\r\n\r\n                let tempHour = date.getHours() + utc;\r\n                let tempMin = date.getMinutes() + min\r\n\r\n                date.setHours( tempHour );\r\n                date.setMinutes( tempMin );\r\n                setHour(date.getHours())\r\n\r\n                let awaitData = await getData(\"colombia\")\r\n                awaitData.date = date;\r\n                awaitData.country = \"colombia\";\r\n                \r\n                setData( awaitData)    \r\n                setResponse(true)\r\n            }\r\n        }\r\n\r\n        callbackData();\r\n\r\n    }, [data])\r\n\r\n\r\n    return(\r\n        <section className=\"Countries\">\r\n\r\n            {\r\n                response ? \r\n                    hour >= 6 && hour <= 12 ? <Morning data = { data } />\r\n                    : hour > 12 && hour <= 15 ? <Noon data = { data } />\r\n                    : hour > 15 && hour <= 19 ? <AfterNoon data = { data } />\r\n                    : <Night data = { data } />\r\n                    \r\n                :\r\n                <div className=\"Countries__loading\">\r\n                    <div className=\"loader\" />\r\n                    <div>Estamos cargando todos los datos de Colombia</div>\r\n                </div>\r\n            }\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Colombia;","import React from 'react'\r\nimport './index.scss';\r\n\r\nimport * as Routes from '../../assets/js/Routes';\r\n\r\nimport Logo from '../../Components/Logo'\r\nimport Colombia from '../../Components/Colombia'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Home = () => {\r\n    return(\r\n        <section className=\"Home\">\r\n        <Colombia quality='colombia'/>\r\n           <article className=\"Home__content\">\r\n                <Logo />\r\n                <div className=\"Home__content__body\">\r\n                    <h1 className=\"Home__content__body__title\">Bienvenido/a</h1>\r\n                    <p className=\"Home__content__body__text\">Aquí podrás observar en tiempo real la condición en que se encuentra el aire de Colombia, la temperatura, la hora del día y la población dependiendo del estado del entorno. </p>\r\n                    <Link to={ Routes.COLOMBIA } className=\"Home__content__body__btn\"> Iniciar </Link>\r\n                </div>\r\n                <div />\r\n\r\n            </article>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react'\r\nimport './index.scss'\r\n\r\nconst Credits = () => {\r\n\r\n    return (\r\n        <a href=\"https://aqicn.org/city/colombia/bogota/es/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"Credits\">\r\n            <p>Todos los datos de la calidad de aire han sido tomados de World Air Quality Index Team</p>\r\n        </a>\r\n    )\r\n}\r\n\r\nexport default Credits;","import React from 'react'\r\nimport './index.scss';\r\n\r\nimport getData from '../../utils/getData';\r\n\r\nimport Morning from '../../Hours/Morning';\r\nimport Noon from '../../Hours/Noon';\r\nimport Night from '../../Hours/Night';\r\nimport AfterNoon from '../../Hours/AfterNoon';\r\n\r\nconst India = ( props ) => {\r\n    \r\n    const [ data, setData ] = React.useState({})\r\n    const [ hour, setHour ] = React.useState(0)\r\n    const [ response, setResponse ] = React.useState(false)\r\n\r\n    let date = null;\r\n\r\n    React.useEffect( () => {\r\n\r\n        const callbackData = async () => {\r\n            if( response === false ) {\r\n                date = new Date()\r\n                let utc = 11;\r\n                let min = 30;\r\n\r\n                let tempHour = date.getHours() + utc;\r\n                let tempMin = date.getMinutes() + min\r\n\r\n                date.setHours( tempHour );\r\n                date.setMinutes( tempMin );\r\n                setHour(date.getHours())\r\n\r\n                let awaitData = await getData(\"india\")\r\n                awaitData.date = date;\r\n                awaitData.country = \"india\";\r\n                \r\n                \r\n                setData( awaitData)    \r\n                setResponse(true)\r\n            }\r\n        }\r\n\r\n        callbackData();\r\n\r\n    }, [props, data])\r\n\r\n\r\n    return(\r\n        <section className=\"Countries\">\r\n\r\n            {\r\n                response ? \r\n                    hour >= 6 && hour <= 12 ? <Morning data = { data } />\r\n                    : hour > 12 && hour <= 15 ? <Noon data = { data } />\r\n                    : hour > 15 && hour <= 19 ? <AfterNoon data = { data } />\r\n                    : <Night data = { data } />\r\n                    \r\n                :\r\n                <div className=\"Countries__loading\">\r\n                    <div className=\"loader\" />\r\n                    <div>Estamos cargando todos los datos de la India</div>\r\n                </div>\r\n            }\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default India;","import React from 'react'\r\nimport './index.scss';\r\n\r\nimport getData from '../../utils/getData';\r\n\r\nimport Morning from '../../Hours/Morning';\r\nimport Noon from '../../Hours/Noon';\r\nimport Night from '../../Hours/Night';\r\nimport AfterNoon from '../../Hours/AfterNoon';\r\n\r\nconst Kirguistan = ( props ) => {\r\n    \r\n    const [ data, setData ] = React.useState({})\r\n    const [ hour, setHour ] = React.useState(0)\r\n    const [ response, setResponse ] = React.useState(false)\r\n\r\n    let date = null;\r\n\r\n    React.useEffect( () => {\r\n\r\n        const callbackData = async () => {\r\n            if( response === false ) {\r\n                date = new Date()\r\n                let utc = 11;\r\n                let min = 0;\r\n\r\n                let tempHour = date.getHours() + utc;\r\n                let tempMin = date.getMinutes() + min\r\n\r\n                date.setHours( tempHour );\r\n                date.setMinutes( tempMin );\r\n                setHour(date.getHours())\r\n\r\n                let awaitData = await getData(\"kyrgyzstan\")\r\n                awaitData.date = date;\r\n                awaitData.country = \"kyrgyzstan\";\r\n                \r\n                setData( awaitData)    \r\n                setResponse(true)\r\n            }\r\n        }\r\n\r\n        callbackData();\r\n\r\n    }, [props, data])\r\n\r\n\r\n    return(\r\n        <section className=\"Countries\">\r\n\r\n            {\r\n                response ? \r\n                    hour >= 6 && hour <= 12 ? <Morning data = { data } />\r\n                    : hour > 12 && hour <= 15 ? <Noon data = { data } />\r\n                    : hour > 15 && hour <= 19 ? <AfterNoon data = { data } />\r\n                    : <Night data = { data } />\r\n                    \r\n                :\r\n                <div className=\"Countries__loading\">\r\n                    <div className=\"loader\" />\r\n                    <div>Estamos cargando todos los datos de Kirguistán</div>\r\n                </div>\r\n            }\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Kirguistan;","import React from 'react'\nimport { HashRouter, Switch, Route } from 'react-router-dom'\nimport './assets/css/reset.scss'\nimport './assets/css/general.scss'\n\nimport * as Routes from './assets/js/Routes'\n\nimport Home from './Containers/Home'\nimport Credits from './Components/Credits'\n\nimport India from './Components/India'\nimport Colombia from './Components/Colombia'\nimport Kirguistan from './Components/Kirguistan'\n\nconst App = () =>  {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route exact path = { Routes.HOME } > <Home /> </Route>\n        <Route exact path = { Routes.COLOMBIA } > <Colombia quality=\"colombia\" /> </Route>\n        <Route exact path = { Routes.SALUDABLE } > <Kirguistan quality=\"healt\" /> </Route>\n        <Route exact path = { Routes.ENFERMO } > <India quality=\"sick\" /> </Route>\n        <Route exact path = { Routes.HUELLA }> <h1> Medición de la huella </h1> </Route>\n        <Route path = { Routes.ERROR404 }> <h1> Error 404 </h1> </Route>\n      </Switch>\n\n      <Credits />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render( <App />, document.getElementById('root'));\n"],"sourceRoot":""}